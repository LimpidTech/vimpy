# Defines a map which relates handler method names to autocommand event names.
# Autocommand event names must be provided in the same exact caps as provided
# in the documentation, or unpredictable behavior will occur within Vim.
autocommands_map = {
    'stdin_read_pre': 'StdinReadPre',
    'buf_write_post': 'BufWritePost',
    'focus_lost': 'FocusLost',
    'cursor_moved_i': 'CursorMovedI',
    'file_read_pre': 'FileReadPre',
    'file_type': 'FileType',
    'buf_write_cmd': 'BufWriteCmd',
    'buf_read_pre': 'BufReadPre',
    'term_response': 'TermResponse',
    'buf_new_fil': 'BufNewFile',
    'buf_add': 'BufAdd',
    'buf_wipeout': 'BufWipeout',
    'insert_leave': 'InsertLeave',
    'file_changed_shell': 'FileChangedShell',
    'vim_leave_pre': 'VimLeavePre',
    'file_changed_ro': 'FileChangedRO',
    'buf_unload': 'BufUnload',
    'tab_enter': 'TabEnter',
    'tab_leave': 'TabLeave',
    'buf_hidden': 'BufHidden',
    'buf_file_pre': 'BufFilePre',
    'shell_filter_post': 'ShellFilterPost',
    'buf_write_pre': 'BufWritePre',
    'cmdwin_leave': 'CmdwinLeave',
    'buf_new': 'BufNew',
    'file_write_post': 'FileWritePost',
    'buf_create': 'BufCreate',
    'file_changed_shell_post': 'FileChangedShellPost',
    'guienter': 'GUIEnter',
    'insert_enter': 'InsertEnter',
    'source_cmd': 'SourceCmd',
    'file_read_post': 'FileReadPost',
    'buf_win_leave': 'BufWinLeave',
    'insert_change': 'InsertChange',
    'menu_popup': 'MenuPopup',
    'buf_leave': 'BufLeave',
    'win_enter': 'WinEnter',
    'file_append_post': 'FileAppendPost',
    'source_pre': 'SourcePre',
    'cursor_hold': 'CursorHold',
    'func_undefined': 'FuncUndefined',
    'spell_file_missing': 'SpellFileMissing',
    'quick_fix_cmd_pre': 'QuickFixCmdPre',
    'filter_read_pre': 'FilterReadPre',
    'shell_cmd_post': 'ShellCmdPost',
    'cursor_moved': 'CursorMoved',
    'session_load_post': 'SessionLoadPost',
    'filter_write_pre': 'FilterWritePre',
    'buf_delete': 'BufDelete',
    'buf_write': 'BufWrite',
    'vim_resized': 'VimResized',
    'user': 'User',
    'color_scheme': 'ColorScheme',
    'cmdwin_enter': 'CmdwinEnter',
    'file_append_cmd': 'FileAppendCmd',
    'file_write_cmd': 'FileWriteCmd',
    'filter_read_post': 'FilterReadPost',
    'buf_read_cmd': 'BufReadCmd',
    'buf_enter': 'BufEnter',
    'focus_gained': 'FocusGained',
    'file_read_cmd': 'FileReadCmd',
    'file_write_pre': 'FileWritePre',
    'stdin_read_post': 'StdinReadPost',
    'syntax': 'Syntax',
    'cursor_hold_i': 'CursorHoldI',
    'vim_enter': 'VimEnter',
    'win_leave': 'WinLeave',
    'buf_read_post': 'BufReadPost',
    'remote_reply': 'RemoteReply',
    'buf_file_post': 'BufFilePost',
    'quick_fix_cmd_post': 'QuickFixCmdPost',
    'encoding_changed': 'EncodingChanged',
    'swap_exists': 'SwapExists',
    'file_append_pre': 'FileAppendPre',
    'buf_win_enter': 'BufWinEnter',
    'term_changed': 'TermChanged',
    'buf_read': 'BufRead',
    'filter_write_post': 'FilterWritePost',
    'vim_leave': 'VimLeave',
}
